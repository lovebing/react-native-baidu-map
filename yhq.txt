js/CoorTypes.js

,
  WGS84:'wgs84'

index.js

import _CoorTypes from './js/CoorTypes';

export const CoorTypes = _CoorTypes;




js/Geolocation.js

,
  convertCoor(source,fromCoorType,toCoorType ) {
    return new Promise((resolve, reject) => {
      if (fromCoorType==CoorTypes.WGS84){
        if (toCoorType==CoorTypes.BD09ll){
          try {
            _module.getBD09LLCoorFromWGS84Coor(source.latitude,source.longitude).then((data)=>{
              resolve(data);
            });
          }
          catch (e) {
            reject(e);
            return;
          }

        }else if (toCoorType==CoorTypes.GCJ02){
          try {
            _module.getGCJ02CoorFromWGS84Coor(source.latitude,source.longitude).then((data)=>{
              resolve(data);
            });
          }
          catch (e) {
            reject(e);
            return;
          }

        }
      }else if (fromCoorType==CoorTypes.BD09ll && toCoorType==CoorTypes.GCJ02){
        try {
          _module.getGCJ02CoorFromBD09LLCoor(source.latitude,source.longitude).then((data)=>{
            resolve(data);
          });
        }
        catch (e) {
          reject(e);
          return;
        }
      }
      else if (fromCoorType==CoorTypes.GCJ02 && toCoorType==CoorTypes.BD09ll){
        try {
          _module.getBD09LLCoorFromGCJ02Coor(source.latitude,source.longitude).then((data)=>{
            resolve(data);
          });
        }
        catch (e) {
          reject(e);
          return;
        }
      }else{
        reject("不支持");
        return;
      }

    });

  }


/ios/RCTBaiduMap/GeolocationModule.m

RCT_EXPORT_METHOD(getGCJ02CoorFromWGS84Coor:(double)lat lng:(double)lng
                  resolver:(RCTPromiseResolveBlock)resolve
                  rejecter:(RCTPromiseRejectBlock)reject) {
    CLLocationCoordinate2D src = CLLocationCoordinate2DMake(lat, lng);
    CLLocationCoordinate2D desc = BMKCoordTrans(src, BMK_COORDTYPE_GPS,BMK_COORDTYPE_COMMON);
    NSDictionary* coor = @{
                           @"latitude": @(desc.latitude),
                           @"longitude": @(desc.longitude)
                           };
    NSLog(@"getGCJ02CoorFromWGS84Coor lat:%f lng:%f  to lat:%f lng:%f",lat,lng,desc.latitude,desc.longitude);

    resolve(coor);
}


RCT_EXPORT_METHOD(getBD09LLCoorFromWGS84Coor:(double)lat lng:(double)lng
                  resolver:(RCTPromiseResolveBlock)resolve
                  rejecter:(RCTPromiseRejectBlock)reject) {
    CLLocationCoordinate2D src = CLLocationCoordinate2DMake(lat, lng);
    CLLocationCoordinate2D desc = BMKCoordTrans(src, BMK_COORDTYPE_GPS,BMK_COORDTYPE_BD09LL);
    NSDictionary* coor = @{
                           @"latitude": @(desc.latitude),
                           @"longitude": @(desc.longitude)
                           };

    NSLog(@"getBD09LLCoorFromWGS84Coor lat:%f lng:%f  to lat:%f lng:%f",lat,lng,desc.latitude,desc.longitude);
    resolve(coor);
}



RCT_EXPORT_METHOD(getGCJ02CoorFromBD09LLCoor:(double)lat lng:(double)lng
                  resolver:(RCTPromiseResolveBlock)resolve
                  rejecter:(RCTPromiseRejectBlock)reject) {
    CLLocationCoordinate2D src = CLLocationCoordinate2DMake(lat, lng);
    CLLocationCoordinate2D desc = BMKCoordTrans(src, BMK_COORDTYPE_BD09LL,BMK_COORDTYPE_COMMON);
    NSDictionary* coor = @{
                           @"latitude": @(desc.latitude),
                           @"longitude": @(desc.longitude)
                           };

    NSLog(@"getGCJ02CoorFromBD09LLCoor lat:%f lng:%f  to lat:%f lng:%f",lat,lng,desc.latitude,desc.longitude);
    resolve(coor);
}


RCT_EXPORT_METHOD(getBD09LLCoorFromGCJ02Coor:(double)lat lng:(double)lng
                  resolver:(RCTPromiseResolveBlock)resolve
                  rejecter:(RCTPromiseRejectBlock)reject) {

    CLLocationCoordinate2D src = CLLocationCoordinate2DMake(lat, lng);
    CLLocationCoordinate2D desc = BMKCoordTrans(src,BMK_COORDTYPE_COMMON,BMK_COORDTYPE_BD09LL);
    NSDictionary* coor = @{
                           @"latitude": @(desc.latitude),
                           @"longitude": @(desc.longitude)
                           };
    NSLog(@"getBD09LLCoorFromGCJ02Coor lat:%f lng:%f  to lat:%f lng:%f",lat,lng,desc.latitude,desc.longitude);
    resolve(coor);
}